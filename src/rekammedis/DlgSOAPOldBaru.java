/*
  Dilarang keras menggandakan/mengcopy/menyebarkan/membajak/mendecompile 
  Software ini dalam bentuk apapun tanpa seijin pembuat software
  (Khanza.Soft Media). Bagi yang sengaja membajak softaware ini ta
  npa ijin, kami sumpahi sial 1000 turunan, miskin sampai 500 turu
  nan. Selalu mendapat kecelakaan sampai 400 turunan. Anak pertama
  nya cacat tidak punya kaki sampai 300 turunan. Susah cari jodoh
  sampai umur 50 tahun sampai 200 turunan. Ya Alloh maafkan kami 
  karena telah berdoa buruk, semua ini kami lakukan karena kami ti
  dak pernah rela karya kami dibajak tanpa ijin.
 */
package rekammedis;

import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.BorderLayout;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Logger;
import javafx.application.Platform;
import javafx.concurrent.Worker.State;
import static javafx.concurrent.Worker.State.FAILED;
import javafx.embed.swing.JFXPanel;
import javafx.scene.Scene;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/**
 * @author dosen
 */
public class DlgSOAPOldBaru extends javax.swing.JDialog {

    private final sekuel Sequel = new sekuel();

    private final validasi Valid = new validasi();

    private final Connection koneksi = koneksiDB.condb();

    private PreparedStatement ps, ps2;

    private ResultSet rs, rs2;

    private final int i = 0;

    private String noRawat = "";

    private final JFXPanel jfxPanel = new JFXPanel();

    private WebEngine engine;

    private final JLabel lblStatus = new JLabel();

    private final JTextField txtURL = new JTextField();

    private final JProgressBar progressBar = new JProgressBar();

    /**
     * Creates new form DlgKamar
     *
     * @param parent
     * @param modal
     */
    public DlgSOAPOldBaru(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initComponents2();

        this.setLocation(10, 2);
        setSize(628, 674);
    }

    private final Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();

    private void initComponents2() {
        progressBar.setPreferredSize(new Dimension(150, 18));
        progressBar.setStringPainted(true);

        PanelContent.add(jfxPanel, BorderLayout.CENTER);

        internalFrame1.add(PanelContent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        panelGlass6 = new widget.panelisi();
        label11 = new widget.Label();
        Tgl1 = new widget.Tanggal();
        label18 = new widget.Label();
        Tgl2 = new widget.Tanggal();
        jLabel6 = new widget.Label();
        TCari = new widget.TextBox();
        btnCari = new widget.Button();
        BtnAll = new widget.Button();
        jLabel17 = new widget.Label();
        BtnKeluar = new widget.Button();
        PanelContent = new widget.panelisi();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(null);
        setIconImages(null);
        setUndecorated(true);
        setResizable(false);

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Riwayat Perawatan ICare FKTL BPJS ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass6.setName("panelGlass6"); // NOI18N
        panelGlass6.setPreferredSize(new java.awt.Dimension(44, 54));
        panelGlass6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label11.setText("Tanggal :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(55, 23));
        panelGlass6.add(label11);

        Tgl1.setDisplayFormat("dd-MM-yyyy");
        Tgl1.setName("Tgl1"); // NOI18N
        Tgl1.setPreferredSize(new java.awt.Dimension(95, 23));
        panelGlass6.add(Tgl1);

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("s.d.");
        label18.setName("label18"); // NOI18N
        label18.setPreferredSize(new java.awt.Dimension(30, 23));
        panelGlass6.add(label18);

        Tgl2.setDisplayFormat("dd-MM-yyyy");
        Tgl2.setName("Tgl2"); // NOI18N
        Tgl2.setPreferredSize(new java.awt.Dimension(95, 23));
        panelGlass6.add(Tgl2);

        jLabel6.setText("Key Word :");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(70, 23));
        panelGlass6.add(jLabel6);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(160, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass6.add(TCari);

        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        btnCari.setMnemonic('2');
        btnCari.setToolTipText("Alt+2");
        btnCari.setName("btnCari"); // NOI18N
        btnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        btnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCariKeyPressed(evt);
            }
        });
        panelGlass6.add(btnCari);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnAll);

        jLabel17.setName("jLabel17"); // NOI18N
        jLabel17.setPreferredSize(new java.awt.Dimension(15, 23));
        panelGlass6.add(jLabel17);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnKeluar);

        internalFrame1.add(panelGlass6, java.awt.BorderLayout.PAGE_END);

        PanelContent.setName("PanelContent"); // NOI18N
        PanelContent.setPreferredSize(new java.awt.Dimension(55, 55));
        PanelContent.setLayout(new java.awt.BorderLayout());
        internalFrame1.add(PanelContent, java.awt.BorderLayout.CENTER);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            dispose();
        } else {
        }
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnCariActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            btnCari.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            BtnKeluar.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        tampil();
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            btnCariActionPerformed(null);
        }
    }//GEN-LAST:event_btnCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        tampil();
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            TCari.setText("");
            tampil();
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgSOAPOldBaru dialog = new DlgSOAPOldBaru(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }

            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnKeluar;
    private widget.panelisi PanelContent;
    private widget.TextBox TCari;
    private widget.Tanggal Tgl1;
    private widget.Tanggal Tgl2;
    private widget.Button btnCari;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel17;
    private widget.Label jLabel6;
    private widget.Label label11;
    private widget.Label label18;
    private widget.panelisi panelGlass6;
    // End of variables declaration//GEN-END:variables

    /**
     *
     */
    public void tampil() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            StringBuilder htmlContent = new StringBuilder();
            htmlContent.append("<html>" + "<head>" + "<style>"
                    + ".isi td, .isi2 td, .isi3 td, .isi4 td { font: 10px Tahoma; height: 12px; background: #ffffff; color: #323232; padding: 5px; border-radius: 4px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); }"
                    + ".isi td, .isi3 td { border-right: 1px solid #e2e7dd; }"
                    + ".isi td, .isi3 td { border-bottom: 1px solid #e2e7dd; }"
                    + ".isi3 td, .isi4 td { border-top: 1px solid #e2e7dd; }" + "</style>"
                    + "<script src='https://cdn.jsdelivr.net/npm/chart.js'></script>" + "</head>" + "<body>"
                    + "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"
                    + "<tr class='isi'>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='5%'>Tgl.Reg</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%'>No.Rawat</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='4%'>No.R.M</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='10%'>Nama Pasien</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='3%'>Status</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='70%'>S.O.A.P.I.E</td>" + "</tr>");
            ps = koneksi.prepareStatement(
                    "select reg_periksa.no_rawat,reg_periksa.tgl_registrasi,reg_periksa.no_rkm_medis,pasien.nm_pasien,pasien.jk,concat(reg_periksa.umurdaftar,' ',reg_periksa.sttsumur)as umur, "
                    + "reg_periksa.status_lanjut from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis where reg_periksa.no_rawat='"
                    + noRawat + "' " + " "
                    + (TCari.getText().trim().isEmpty() ? ""
                    : "and (reg_periksa.no_rawat like ? or reg_periksa.no_rkm_medis like ? or pasien.nm_pasien like ? or reg_periksa.status_lanjut like ?)")
                    + " order by reg_periksa.tgl_registrasi");
            try {
                if (!TCari.getText().trim().isEmpty()) {
                    ps.setString(1, "%" + TCari.getText().trim() + "%");
                    ps.setString(2, "%" + TCari.getText().trim() + "%");
                    ps.setString(3, "%" + TCari.getText().trim() + "%");
                    ps.setString(4, "%" + TCari.getText().trim() + "%");
                }
                rs = ps.executeQuery();
                while (rs.next()) {
                    htmlContent.append("<tr class='isi'><td valign='middle' align='center'>")
                            .append(rs.getString("tgl_registrasi"))
                            .append("</td><td valign='middle' align='center'>")
                            .append(rs.getString("no_rawat"))
                            .append("</td><td valign='middle' align='center'>")
                            .append(rs.getString("no_rkm_medis"))
                            .append("</td><td valign='middle' align='left'>")
                            .append(rs.getString("nm_pasien"))
                            .append(" / ")
                            .append(rs.getString("jk"))
                            .append(" / ")
                            .append(rs.getString("umur"))
                            .append("</td><td valign='middle' align='center'>")
                            .append(rs.getString("status_lanjut"))
                            .append("</td><td valign='top' align='center'><table width='100%' border='0' align='center' cellpadding='2px' cellspacing='0'>");
                    try {
                        rs2 = koneksi.prepareStatement(
                                "select pemeriksaan_ralan.tgl_perawatan,pemeriksaan_ralan.jam_rawat,pemeriksaan_ralan.keluhan,"
                                + "pemeriksaan_ralan.pemeriksaan,pemeriksaan_ralan.rtl,pemeriksaan_ralan.instruksi,pemeriksaan_ralan.evaluasi,pemeriksaan_ralan.penilaian,pemeriksaan_ralan.nip,pegawai.nama,departemen.nama "
                                + "from pemeriksaan_ralan inner join pegawai on pemeriksaan_ralan.nip=pegawai.nik inner join departemen on pegawai.departemen=departemen.dep_id where pemeriksaan_ralan.no_rawat='"
                                + rs.getString("no_rawat") + "' "
                                + "order by pemeriksaan_ralan.tgl_perawatan desc,pemeriksaan_ralan.jam_rawat desc")
                                .executeQuery();
                        if (rs2.next()) {
                            htmlContent.append("<tr>"
                                    + "<td valign='middle' align='center' bgcolor='#FFFFF8' colspan='8'>Rawat Jalan</td>"
                                    + "</tr>" + "<tr class='isi'>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='7%'>Tanggal</td>"
                                    + "<td valign='middle' align='center'  width=15%' bgcolor='#FFFAF8'>Nama Pegawai</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Subjek</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Objek</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Asesmen</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Plan</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Instruksi/Implementasi</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Evaluasi</td>"
                                    + "</tr>");
                            rs2.beforeFirst();
                            while (rs2.next()) {
                                String bagian = "", stylee = "";

                                bagian = Sequel.cariIsi(
                                        "SELECT kd_dokter FROM dokter WHERE kd_dokter='" + rs2.getString("nip") + "'");

                                if (!bagian.isEmpty()) {
                                    stylee = " style=' background-color:#f7d4e8 '";
                                } else {
                                    stylee = " style=' background-color:#ccffcc '";
                                }
                                htmlContent.append("<tr class='isi'><td align='center' ")
                                        .append(stylee)
                                        .append(" >")
                                        .append(rs2.getString("tgl_perawatan"))
                                        .append("<br>")
                                        .append(rs2.getString("jam_rawat"))
                                        .append("</td><td align='left'  ")
                                        .append(stylee)
                                        .append(" >")
                                        .append(rs2.getString("nama"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(" >")
                                        .append(rs2.getString("keluhan"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("pemeriksaan"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("penilaian"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("rtl"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("instruksi"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("evaluasi"))
                                        .append("</td></tr>");
                            }
                        }
                    } catch (Exception e) {
                        System.out.println("Notifikasi : " + e);
                    } finally {
                        if (rs2 != null) {
                            rs2.close();
                        }
                    }
                    try {
                        rs2 = koneksi.prepareStatement(
                                "select pemeriksaan_ranap.tgl_perawatan,pemeriksaan_ranap.jam_rawat,pemeriksaan_ranap.keluhan,"
                                + "pemeriksaan_ranap.pemeriksaan,pemeriksaan_ranap.rtl,pemeriksaan_ranap.instruksi,pemeriksaan_ranap.evaluasi,pemeriksaan_ranap.penilaian,pemeriksaan_ranap.nip,pegawai.nama,departemen.nama "
                                + "from pemeriksaan_ranap inner join pegawai on pemeriksaan_ranap.nip=pegawai.nik inner join departemen on pegawai.departemen=departemen.dep_id where pemeriksaan_ranap.no_rawat='"
                                + rs.getString("no_rawat") + "' "
                                + "order by pemeriksaan_ranap.tgl_perawatan desc,pemeriksaan_ranap.jam_rawat desc")
                                .executeQuery();
                        if (rs2.next()) {
                            htmlContent.append("<tr>"
                                    + "<td valign='middle' align='center' bgcolor='#FFFFF8' colspan='8'>Rawat Inap</td>"
                                    + "</tr>" + "<tr class='isi'>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='10%'>Tanggal</td>"
                                    + "<td valign='middle' align='center'  width=15%' bgcolor='#FFFAF8'>Nama Pegawai</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Subjek</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Objek</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Asesmen</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Plan</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Instruksi/Implementasi</td>"
                                    + "<td valign='middle' bgcolor='#FFFFF8' align='center' width='20%'>Evaluasi</td>"
                                    + "</tr>");
                            rs2.beforeFirst();
                            while (rs2.next()) {
                                String bagian = "", stylee = "", gbrverif = "";

                                bagian = Sequel.cariIsi(
                                        "SELECT kd_dokter FROM dokter WHERE kd_dokter='" + rs2.getString("nip") + "'");

                                if (!bagian.isEmpty()) {
                                    stylee = " style=' background-color:#f7d4e8 '";
                                } else {
                                    stylee = " style=' background-color:#ccffcc '";
                                }
                                htmlContent.append("<tr class='isi'  ><td align='center' ")
                                        .append(stylee)
                                        .append(" >")
                                        .append(rs2.getString("tgl_perawatan"))
                                        .append("<br>")
                                        .append(rs2.getString("jam_rawat"))
                                        .append("</td><td align='left'  ")
                                        .append(stylee)
                                        .append(" >")
                                        .append(rs2.getString("nama"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(" >")
                                        .append(rs2.getString("keluhan"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("pemeriksaan"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("penilaian"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("rtl"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("instruksi"))
                                        .append("</td><td align='left' ")
                                        .append(stylee)
                                        .append(">")
                                        .append(rs2.getString("evaluasi"))
                                        .append("</td></tr>");
                            }
                        }
                    } catch (Exception e) {
                        System.out.println("Notifikasi : " + e);
                    } finally {
                        if (rs2 != null) {
                            rs2.close();
                        }
                        if (ps2 != null) {
                            ps2.close();
                        }
                    }
                    htmlContent.append("</table>" + "</td>" + "</tr>" + "</table>" + "</body>" + "</html>");
                }
            } catch (Exception e) {
                System.out.println("Notif : " + e);
            } finally {
                if (rs != null) {
                    rs.close();
                }
                if (ps != null) {
                    ps.close();
                }
            }

            try {
                createScene();
            } catch (Exception e) {
            }

            Platform.runLater(() -> {
                try {
                    engine.loadContent(htmlContent.toString());
                } catch (Exception exception) {
                    engine.loadContent(htmlContent.toString());
                }
            });

        } catch (Exception e) {
            System.out.println("laporan.DlgRL4A.tampil() 5 : " + e);
        }
        this.setCursor(Cursor.getDefaultCursor());
    }

    /**
     * @param param
     * @param kodedokter
     */
    public void setPasien(String param, String kodedokter) {
        tampil();
    }

    private void createScene() {
        Platform.runLater(() -> {
            WebView view = new WebView();
            engine = view.getEngine();
            engine.setJavaScriptEnabled(true);

            engine.setOnStatusChanged(event -> lblStatus.setText(event.getData()));

            engine.getLoadWorker()
                    .workDoneProperty()
                    .addListener((observable, oldValue, newValue) -> progressBar.setValue(newValue.intValue()));

            engine.getLoadWorker().exceptionProperty().addListener((observable, old, value) -> {
                if (engine.getLoadWorker().getState() == FAILED) {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(PanelContent,
                            (value != null) ? engine.getLocation() + "\n" + value.getMessage()
                                    : engine.getLocation() + "\nUnexpected Catatan.",
                            "Loading Catatan...", JOptionPane.ERROR_MESSAGE));
                }
            });

            engine.locationProperty().addListener((observable, oldValue, newValue) -> txtURL.setText(newValue));

            engine.getLoadWorker().stateProperty().addListener((observable, oldState, newState) -> {
                if (newState == State.SUCCEEDED) {
                    try {

                    } catch (Exception ex) {
                        System.out.println("Notifikasi : " + ex);
                    }
                }
            });

            jfxPanel.setScene(new Scene(view));
        });
    }

    /**
     *
     */
    public void CloseScane() {
        Platform.setImplicitExit(false);
    }

    public void setNoRawat(String x, String y) {
        this.noRawat = x;
        TCari.setText(y);
        tampil();
    }

    private static final Logger LOG = Logger.getLogger(DlgSOAPOldBaru.class.getName());

}
